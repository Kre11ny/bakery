from client import Client
from currency import Ruble
from employee import Employee
from menu import Menu
from order import Order


class Cashier(Employee):
    def __init__(self, name: str, salary: Ruble):
        super().__init__(name, salary)
        self._position: str = 'Cashier'
        self._menu: Menu = None

    def set_position(self, position: str):
        self._position: str = position

    def get_position(self) -> str:
        return self._position

    def __str__(self):
        return f'{self.get_position()}: {self.get_name()}'

    def take_menu(self, menu: Menu):
        self._menu: Menu = menu

    def greeting(self):
        print(f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ú–µ–Ω—è –∑–æ–≤—É—Ç {self.get_name()}')

    def register_client(self) -> Client:
        self.greeting()
        input_name = input('–ö–∞–∫ –í–∞—Å –∑–æ–≤—É—Ç?\n')  # TODO: –≤–æ–∑–º–æ–∂–Ω–æ –ª–∏—à–Ω–∏–π –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ - –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å!
        input_balance = safe_float_input_read(
            '–°–∫–æ–ª—å–∫–æ —É –í–∞—Å –¥–µ–Ω–µ–≥\n')  # TODO: –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å –ø–æ—Ç–æ–º –Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é —Å—Ä–µ–¥—Å—Ç–≤ –≤–Ω—É—Ç—Ä–∏ –∫–ª–µ–Ω—Ç–∞
        print(f'–†–∞–¥—ã –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–π –ü–µ–∫–∞—Ä–Ω–µ, {input_name}!')

        return Client(input_name, input_balance)

    def accept_order_from_client(self, client: Client):
        option_question = '–ß—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —Å–¥–µ–ª–∞—Ç—å?\n'
        print_client_action_options()
        option = safe_int_input_read(option_question)
        order = Order()

        while option != 0:
            if option == 1:
                self.offer_and_accept_backed(client, order)
                print('–ñ–µ–ª–∞–µ—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –µ—â—ë –∏–∑ –≤—ã–ø–µ—á–∫–∏?')
                print('[0] –ù–µ—Ç')
                print('[1] –î–∞')
                decision = safe_int_input_read('–í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á–∏—Å–ª–æ: ')
                if decision == 1:
                    continue


            # elif option == 2:
            # –∑–¥–µ—Å—å –Ω–∞ –æ–±—ä–µ–∫—Ç–µ Order –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —Ç—Ä–µ–±—É–µ–º—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∏–∞–ª–æ–≥–∞–º–∏ –∏ –í–ê–õ–ò–î–ê–¶–ò–ï–ô –ò–ó–ú–ï–ù–ï–ù–ò–ô
            # –≤–Ω—É—Ç—Ä–∏ –∑–∞–∫–∞–∑–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
            # –º–æ–∂–Ω–æ –±—Ä–æ—Å–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–π Exception –∏ –∑–¥–µ—Å—å –µ–≥–æ –ø–æ–π–º–∞—Ç—å, —Å–∫–∞–∑–∞—Ç—å –ø—Ä–∏ —ç—Ç–æ–º —á—Ç–æ-–ª–∏–±–æ –∫–ª–∏–µ–Ω—Ç—É, –Ω–∞–ø—Ä–∏–º–µ—Ä:
            # try:
            # order.remove_position(position_id, count)
            # except MyExceptionName:
            # print('oops...')
            # except MyExceptionName2:
            # print('oops2...')
            # –≤ –Ω–∞—à–µ–π –ø–µ—Ä–≤–æ–π –¥–æ–º–∞—à–∫–µ —è —Å–æ–∑–¥–∞–≤–∞–ª –∫–∞—Å—Ç–æ–º–Ω—ã–π Exception, –º–æ–∂–Ω–æ —Ç–∞–º –≥–ª—è–Ω—É—Ç—å, –∫–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å
            # elif option == 3:
            # –∑–¥–µ—Å—å –Ω–∞ –æ–±—ä–µ–∫—Ç–µ Order –≤—ã–∑–≤–∞—Ç—å delete_position(postition_id) –∏–ª–∏ —á—Ç–æ-—Ç–æ —Ç–∏–ø–∞ —Ç–æ–≥–æ —Ç–∞–∫–∂–µ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –≤–Ω—É—Ç—Ä–∏
            else:
                print_oops()

            print_client_action_options()
            option = safe_int_input_read(option_question)

        print(f'{order}')
        # –¥–∞–ª—å—à–µ —Ç–µ–±–µ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –ø—Ä–∏–¥—É–º–∞—Ç—å, –∫—É–¥–∞ –∏ –∫–∞–∫ –æ—Ç–¥–∞—Ç—å –∑–∞–∫–∞–∑
        # –∞ —Ç–∞–∫–∂–µ –∫–∞–∫ –∏–∑–≤–µ—Å—Ç–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞, —á—Ç–æ –∑–∞–∫–∞–∑ –≥–æ—Ç–æ–≤
        print('–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ!')

    def offer_and_accept_backed(self, client: Client, order: Order):
        print(f'{client.get_name()}, –≤—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–∑ –≤—ã–ø–µ—á–∫–∏ üôÇ')
        self._menu.show_backed()
        position_index = safe_int_input_read('–ö–∞–∫—É—é –ø–æ–∑–∏—Ü–∏—é —Ö–æ—Ç–µ–ª–∏ –±—ã –¥–æ–±–∞–≤–∏—Ç—å –≤ –∑–∞–∫–∞–∑? –£–∫–∞–∂–∏—Ç–µ —Ü–∏—Ñ—Ä—É: ')
        required_backed_position = self._menu.get_backed_by_index(position_index)
        order.add_position(
            required_backed_position.get_id(),
            required_backed_position.get_name(),
            required_backed_position.get_cost(),
            1,
        )
        print(f'–¢–æ–≤–∞—Ä {required_backed_position} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∑–∞–∫–∞–∑!')


def print_client_action_options():
    print('–ß—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —Å–¥–µ–ª–∞—Ç—å?')
    print('–í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ü–∏—Ñ—Ä—É:')
    print('[0] –Ø –ø–µ—Ä–µ–¥—É–º–∞–ª')
    print('[1] –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
    print('[2] –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é –≤ –∑–∞–∫–∞–∑–µ')
    print('[3] –£–¥–∞–ª–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é –≤ –∑–∞–∫–∞–∑–µ')


def safe_int_input_read(text: str) -> int:
    try:
        return int(input(text))
    except ValueError:
        print_oops()


def safe_float_input_read(text: str) -> float:
    try:
        return float(input(text))
    except ValueError:
        print_oops()


def print_oops():
    print('–£–ø—Å... –Ω–µ–≤–µ—Ä–Ω–∞—è –æ–ø—Ü–∏—è. –ü–æ–º–Ω–∏—Ç–µ, –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Ü–∏—Ñ—Ä—É –æ–ø—Ü–∏–∏! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ üôÇ')
